{"meta":{"title":"Clamee's Blog","subtitle":"","description":"","author":"Clamee","url":"http://example.com","root":"/"},"pages":[{"title":"404","date":"2020-10-07T06:29:01.000Z","updated":"2020-10-07T06:29:01.844Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-10-14T10:54:59.000Z","updated":"2020-10-14T10:55:20.511Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2020-10-14T10:36:29.000Z","updated":"2020-10-14T10:36:29.335Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-10-14T10:54:06.000Z","updated":"2020-10-14T10:54:44.443Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2020-10-14T11:05:48.000Z","updated":"2020-10-14T11:06:12.806Z","comments":true,"path":"search/index.html","permalink":"http://example.com/search/index.html","excerpt":"","text":""}],"posts":[{"title":"【游记】CSP 游记","slug":"CSP-游记","date":"2020-12-30T15:59:59.000Z","updated":"2020-10-11T07:22:44.275Z","comments":true,"path":"2020/12/30/CSP-游记/","link":"","permalink":"http://example.com/2020/12/30/CSP-%E6%B8%B8%E8%AE%B0/","excerpt":"","text":"由于我的 blog 不会自动更新修改时间，为了防止引起恐慌，故 blog 更新时间不会显示原本的更新时间。 Part 1. S1DAY -2~DAY -1Ys 让我们考了三场试，全都考得贼差，心态崩了。 考试的时候笔用完了，考前就去文具店买了几只那种 $1$ 元钱的笔。 初赛前复习了一下补码反码什么的，然后其它的都没怎么看。 DAY 1上午 7:10 不到就跑到机房来了，等到 7:20 左右 ovor 来说是要到校门口集合。然后又来了几个人说不要。我也不是很懂。 8:10 去做车。有幸做 春日野悠 先生的旁边。路上问了他一个题，然后被他随手 cut 了。我又被打击到了。途中经过了 SDFZ，Imakf 拍了几张照，和去年一模一样呢。 到 湖南大学 以后有人找 Imakf，qiuly，踢个人 去签名。今年也见到了 老K ，只不过今年 zzt 比较走运没被 a 而已。 卷子感觉比去年简单。但我阅读理解第三题还是炸的差不多。最后就蒙了个期望得分。蒙对了香农是我没想到的。 考试的时候好多考场的钟坏了，这不是那个都市传说吗？相信聪明的你也是可以理解的吧。总之 +1s 就对了。 考完回来在车上和绿水青山谈笑风生了一波。 中午在 金拱门 吃的中饭。然后还被 T 神拉去打了会篮球。","categories":[],"tags":[{"name":"Other","slug":"Other","permalink":"http://example.com/tags/Other/"}]},{"title":"二次剩余学习笔记","slug":"多项式-DLC","date":"2020-10-11T13:04:02.000Z","updated":"2020-10-11T14:29:47.869Z","comments":true,"path":"2020/10/11/多项式-DLC/","link":"","permalink":"http://example.com/2020/10/11/%E5%A4%9A%E9%A1%B9%E5%BC%8F-DLC/","excerpt":"","text":"精通多项式的大家一定见过以下一个问题(如果你实在要说不精通的话就去看 Imakf 的博客，看完就精通了)。 1.多项式开根(加强版) 给定一个 $n-1$ 次多项式 $A(x)$ ，求一个在 $\\bmod\\ {x^n}$ 意义下的多项式 $B(x)$ ，使得 $B^2(x)\\equiv A(x)\\pmod {x^n}$ ，答案取常数项更小的的 $\\sqrt{A(x)}$。 多项式的系数在 $\\bmod\\ 998244353$ 的意义下进行运算。 **不保证 $a_0=1$**。 先来一波多项式部分的推导： 不妨假设我们求出了 $H^2(x)\\equiv A(x)$，现在要求 $G^2(x)\\equiv A(x)$。$$G(x)-H(x)\\equiv 0(\\bmod x^(\\frac{n}{2})\\G^2(x)+H^2(x)-2G(x)H(x)\\equiv 0(\\bmod x^n)\\2G(x)H(x)\\equiv G^2(x)+H^2(x)(\\bmod x^n)\\G(x)\\equiv \\frac{F(x)+H^2(x)}{2H(x)}(\\bmod x^n)$$ 然后就可以递归求解了。 那么现在递归到常数项的时候有一个问题：如何求 $x_0^2\\equiv y(\\bmod 998244353)$。 那么就要用到一个新知识：二次剩余。 这个玩意使用来求解方程：$$x^2\\equiv n(\\bmod p)$$这里要求 $p$ 是奇质数，我们不妨在这里设 $p$ 的原根为 $g$。 判定 判断一个数 $x$ 是不是二次剩余。 这个东西叫欧拉准则。 结论： $x^{\\frac{p-1}{2}}\\equiv 1(\\bmod p)$ 与 $x$ 是二次剩余等价。 推论： $x^{\\frac{p-1}{2}}\\equiv -1(\\bmod p)$ 与 $x$ 是非二次剩余等价。 根据费马小定理有 $x^{\\frac{p-1}{2}}\\equiv 1(\\bmod p)\\Leftrightarrow x^{2\\cdot\\frac{p-1}{2}}\\equiv 1(\\bmod p)\\Leftrightarrow g^{k\\cdot\\frac{p-1}{2}}\\equiv1(\\bmod p)$ 。 可得 $k$ 一定为偶数，那么 $g^{\\frac{k}{2}}$ 是 $x$ 开根的结果，所以 $x$ 是二次剩余， 由于$x^{\\frac{p-1}{2}}\\equiv 1 or-1(\\bmod p)$ 。 求解 判定完了以后可以开始求解了。 我们可以先找到一个 $a$ 使得 $a^2-n\\equiv 0$ 且 $a^2-n$ 是非二次剩余。 至于怎么找，因为非二次剩余数量是 $n/2$ 级别的，所以可以随机。 现在找到一个 $b$ 使得 $b^2 \\equiv a^2-n$。 因为实际上实数域上涨不到这样的 $b$ 所以可以到复数域上找，只不过为了计算方便我们定义 $i^2=a^2-n$。 那么可以通过计算得出 $(a+i)^{p+1}\\equiv n$。 所以得到 $(a+1)^{\\frac{p+1}{2}}$ 是一个解， $-(a+1)^{\\frac{p+1}{2}}$ 是另一个解。","categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}]},{"title":"【题解】[HA2009]求回文串","slug":"【题解】-HA2009-求回文串","date":"2020-10-08T03:51:33.000Z","updated":"2020-10-08T04:12:23.774Z","comments":true,"path":"2020/10/08/【题解】-HA2009-求回文串/","link":"","permalink":"http://example.com/2020/10/08/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-HA2009-%E6%B1%82%E5%9B%9E%E6%96%87%E4%B8%B2/","excerpt":"","text":"题目大意： 给你一个长度为 $n$ 的字符串，每次可以交换相邻的两个字符，求最小的交换次数使得将字符串变成回文串($n\\le 10^6$)。 可以考虑终止状态和起始状态的联系，可以构建序列 b 表示依次给每个字符找到原序列中的对应字符的出现位置，答案即为 b 数组的逆序对数。 例如： abbca abcba 构建出来的序列为 1 2 4 3 5，所以答案为 $1$。 那么我们就将问题转化为求出一个序列使得它对应上去了以后逆序对数最小。 考虑任意两种字符之间的贡献不难发现，我们可以钦定所有字符的左边不动，只改变右边。于是我们可以构造出一个新的序列。然后求一波逆序对即可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;#define il inline#define rg register#define int long longchar s[1000005];il int read()&#123; int re&#x3D;0,k&#x3D;1;char ch&#x3D;getchar(); while(ch&gt;&#39;9&#39;||ch&lt;&#39;0&#39;)&#123;if(ch&#x3D;&#x3D;&#39;-&#39;)k&#x3D;-1;ch&#x3D;getchar();&#125; while(ch&lt;&#x3D;&#39;9&#39;&amp;&amp;ch&gt;&#x3D;&#39;0&#39;)&#123;re&#x3D;re*10+ch-48;ch&#x3D;getchar();&#125; return re*k;&#125;il void write(int x)&#123; if(x&lt;0)return putchar(&#39;-&#39;),write(-x),void(); if(x&lt;10)return putchar(x+48),void(); return write(x&#x2F;10),putchar(x%10+48),void();&#125;int n,t[26],p[1000005],r[26],b[1000005];int tree[1000005],cnt;bool vis[1000005];void add(int x)&#123; while(x&lt;&#x3D;n) &#123; tree[x]++; x+&#x3D;x&amp;-x; &#125;&#125;int sum(int x)&#123; int re&#x3D;0; while(x) &#123; re+&#x3D;tree[x]; x-&#x3D;x&amp;-x; &#125; return re;&#125;int abs2(int x)&#123; return x&gt;0?x:-x;&#125;signed main()&#123; scanf(&quot;%s&quot;,s+1); n&#x3D;strlen(s+1); for(rg int i&#x3D;1;i&lt;&#x3D;n;i++) &#123; int now&#x3D;s[i]-&#39;A&#39;; t[now]++; p[i]&#x3D;r[now]; r[now]&#x3D;i; &#125; for(rg int i&#x3D;0;i&lt;26;i++) &#123; if(t[i]&amp;1) &#123; if(cnt) &#123; puts(&quot;-1&quot;);return 0; &#125; cnt&#x3D;i; &#125; &#125; if(cnt) &#123; int now&#x3D;r[cnt],las&#x3D;0; for(int i&#x3D;1;i&lt;&#x3D;t[cnt]&#x2F;2;i++) &#123; now&#x3D;p[now]; &#125; if(las) p[las]&#x3D;p[now]; b[n&#x2F;2+1]&#x3D;now; vis[now]&#x3D;1; &#125; int ans&#x3D;0,ss&#x3D;0; for(rg int i&#x3D;1;i&lt;&#x3D;n&#x2F;2+ss;i++) &#123; if(vis[i])&#123;ss++;continue;&#125; int now&#x3D;s[i]-&#39;A&#39;; vis[i]&#x3D;vis[r[now]]&#x3D;1; b[i-ss]&#x3D;i;b[n-i+ss+1]&#x3D;r[now]; r[now]&#x3D;p[r[now]]; &#125; for(int i&#x3D;n;i&gt;&#x3D;1;i--) &#123; ans+&#x3D;sum(b[i]); add(b[i]); &#125; write(ans);&#125;","categories":[],"tags":[{"name":"字符串","slug":"字符串","permalink":"http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"},{"name":"树状数组","slug":"树状数组","permalink":"http://example.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"},{"name":"排序","slug":"排序","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"},{"name":"贪心","slug":"贪心","permalink":"http://example.com/tags/%E8%B4%AA%E5%BF%83/"}]},{"title":"Welcome to clamee's new blog!","slug":"Welcome-to-clamee-s-new-blog","date":"1926-08-17T03:45:14.000Z","updated":"2020-10-08T03:30:20.917Z","comments":true,"path":"1926/08/17/Welcome-to-clamee-s-new-blog/","link":"","permalink":"http://example.com/1926/08/17/Welcome-to-clamee-s-new-blog/","excerpt":"","text":"致 daisiki の米娜桑， 马上就要吃午饭了呢,在这个特殊的日子里。 能在这个美妙的时间搭建我的新博客，对于我而言是非常~开心的哦。以后如果大家想到我的博客来转转，我是非常~欢迎的呢。 大约两年前我在 luogu 开通了我的第一个博客，之后也会基本搬运过来。但这不意味着在 luogu 上停更，以后在 luogu 博客上我还是会发布一些题解。以后大部分的题解，以及所有的其他内容都会在这里发表。至于要不要同步当然是看皮(wo)卡(zi)丘(ji)的的心情啦，毕竟皮卡丘的意愿也是很重要的呢。 在搭建博客的过程中 T 神给了我极大的帮助，在这里非常感谢。顺便一提，T 神是个很可爱的妹子呢(虽然说可爱的一直都只有男孩子而已呢)。 今天感觉是个很重要的日子呢，感觉会有大事发生，会有什么有名的长者之类的人物诞生吗，我也不知道，但是相信屏幕前的你也是可以明白的吧。啊，要到饭点了呢，大家都赶紧去吃饭吧。","categories":[],"tags":[{"name":"Other","slug":"Other","permalink":"http://example.com/tags/Other/"}]}],"categories":[],"tags":[{"name":"Other","slug":"Other","permalink":"http://example.com/tags/Other/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"字符串","slug":"字符串","permalink":"http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"},{"name":"树状数组","slug":"树状数组","permalink":"http://example.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"},{"name":"排序","slug":"排序","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"},{"name":"贪心","slug":"贪心","permalink":"http://example.com/tags/%E8%B4%AA%E5%BF%83/"}]}